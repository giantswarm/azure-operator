{
  "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion":"1.0.0.0",
  "parameters":{
    "blobContainerName":{
      "type":"string",
      "metadata":{
        "description":"Container name for the ignition."
      }
    },
    "clusterID":{
      "type":"string",
      "metadata":{
        "description":"Unique ID of this guest cluster."
      }
    },
    "GiantSwarmTags":{
      "type":"object",
      "defaultValue":{
        "provider":"F80D01C0-7AAC-4440-98F6-5061511962AD"
      }
    },
    "initialProvisioning":{
      "type":"string",
      "defaultValue":"Yes",
      "metadata":{
        "description":"Whether the deployment is provisioned the very first time."
      }
    },
    "storageAccountName":{
      "type":"string",
      "metadata":{
        "description":"Storage account name for the ignition."
      }
    },
    "virtualNetworkName":{
      "type":"string",
      "metadata":{
        "description":"Virtual network's name of the guest cluster"
      }
    },
    "virtualNetworkCidr":{
      "type":"string",
      "metadata":{
        "description":"The main CIDR block reserved for this virtual network."
      }
    },
    "vnetGatewaySubnetName": {
      "type":"string"
    },
    "calicoSubnetCidr":{
      "type":"string"
    },
    "masterSubnetCidr":{
      "type":"string"
    },
    "workerSubnetCidr":{
      "type":"string"
    },
    "vpnSubnetCidr":{
      "type":"string"
    },
    "hostClusterCidr":{
      "type":"string"
    },
    "kubernetesAPISecurePort":{
      "type":"int"
    },
    "dnsASetupTemplateFile":{
      "type":"string",
      "defaultValue":"dns_a_setup.json"
    },
    "dnsCNAMESetupTemplateFile":{
      "type":"string",
      "defaultValue":"dns_cname_setup.json"
    },
    "containerSetupTemplateFile":{
      "type":"string",
      "defaultValue":"container_setup.json"
    },
    "kubernetesLoadBalancerTemplateFile":{
      "type":"string",
      "defaultValue":"kubernetes_load_balancer_setup.json"
    },
    "publicLoadBalancerTemplateFile":{
      "type":"string",
      "defaultValue":"public_load_balancer_setup.json"
    },
    "privateLoadBalancerTemplateFile":{
      "type":"string",
      "defaultValue":"private_load_balancer_setup.json"
    },
    "routeTableTemplateFile":{
      "type":"string",
      "defaultValue":"route_table_setup.json"
    },
    "securityGroupsSetupTemplateFile":{
      "type":"string",
      "defaultValue":"security_groups_setup.json"
    },
    "virtualNetworkSetupTemplateFile":{
      "type":"string",
      "defaultValue":"virtual_network_setup.json"
    },
    "dnsZones":{
      "type":"object",
      "metadata":{
        "description":"The DNS zones for kubernetes api and ingress."
      }
    }
  },
  "variables":{
    "dnsASetupTemplateURI":"[uri(deployment().properties.templateLink.uri, parameters('dnsASetupTemplateFile'))]",
    "dnsCNAMESetupTemplateURI":"[uri(deployment().properties.templateLink.uri, parameters('dnsCNAMESetupTemplateFile'))]",
    "containerSetupTemplateURI":"[uri(deployment().properties.templateLink.uri, parameters('containerSetupTemplateFile'))]",
    "kubernetesLoadBalancerTemplateURI":"[uri(deployment().properties.templateLink.uri, parameters('kubernetesLoadBalancerTemplateFile'))]",
    "publicLoadBalancerTemplateURI":"[uri(deployment().properties.templateLink.uri, parameters('publicLoadBalancerTemplateFile'))]",
    "privateLoadBalancerTemplateURI":"[uri(deployment().properties.templateLink.uri, parameters('privateLoadBalancerTemplateFile'))]",
    "routeTableTemplateURI":"[uri(deployment().properties.templateLink.uri, parameters('routeTableTemplateFile'))]",
    "securityGroupsSetupTemplateURI":"[uri(deployment().properties.templateLink.uri, parameters('securityGroupsSetupTemplateFile'))]",
    "virtualNetworkSetupTemplateURI":"[uri(deployment().properties.templateLink.uri, parameters('virtualNetworkSetupTemplateFile'))]",
    "masterPrefix":"Master",
    "workerPrefix":"Worker"
  },
  "resources":[
    {
      "apiVersion":"2016-09-01",
      "name":"security_groups_setup",
      "type":"Microsoft.Resources/deployments",
      "properties":{
        "mode":"incremental",
        "templateLink":{
          "uri":"[variables('securityGroupsSetupTemplateURI')]",
          "contentVersion":"1.0.0.0"
        },
        "parameters":{
          "clusterID":{
            "value":"[parameters('clusterID')]"
          },
          "GiantSwarmTags":{
            "value":"[parameters('GiantSwarmTags')]"
          },
          "virtualNetworkCidr":{
            "value":"[parameters('virtualNetworkCidr')]"
          },
          "calicoSubnetCidr":{
            "value":"[parameters('calicoSubnetCidr')]"
          },
          "masterSubnetCidr":{
            "value":"[parameters('masterSubnetCidr')]"
          },
          "workerSubnetCidr":{
            "value":"[parameters('workerSubnetCidr')]"
          },
          "hostClusterCidr":{
            "value":"[parameters('hostClusterCidr')]"
          },
          "kubernetesAPISecurePort":{
            "value":"[parameters('kubernetesAPISecurePort')]"
          },
          "initialProvisioning":{
            "value":"[parameters('initialProvisioning')]"
          }
        }
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"route_table_setup",
      "type":"Microsoft.Resources/deployments",
      "properties":{
        "mode":"incremental",
        "templateLink":{
          "uri":"[variables('routeTableTemplateURI')]",
          "contentVersion":"1.0.0.0"
        },
        "parameters":{
          "clusterID":{
            "value":"[parameters('clusterID')]"
          },
          "GiantSwarmTags":{
            "value":"[parameters('GiantSwarmTags')]"
          },
          "initialProvisioning":{
            "value":"[parameters('initialProvisioning')]"
          }
        }
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"virtual_network_setup",
      "type":"Microsoft.Resources/deployments",
      "dependsOn":[
        "route_table_setup"
      ],
      "properties":{
        "mode":"incremental",
        "templateLink":{
          "uri":"[variables('virtualNetworkSetupTemplateURI')]",
          "contentVersion":"1.0.0.0"
        },
        "parameters":{
          "GiantSwarmTags":{
            "value":"[parameters('GiantSwarmTags')]"
          },
          "virtualNetworkName":{
            "value":"[parameters('virtualNetworkName')]"
          },
          "virtualNetworkCidr":{
            "value":"[parameters('virtualNetworkCidr')]"
          },
          "masterSubnetCidr":{
            "value":"[parameters('masterSubnetCidr')]"
          },
          "workerSubnetCidr":{
            "value":"[parameters('workerSubnetCidr')]"
          },
          "vnetGatewaySubnetName":{
            "value":"[parameters('vnetGatewaySubnetName')]"
          },
          "vpnSubnetCidr":{
            "value":"[parameters('vpnSubnetCidr')]"
          },
          "masterSecurityGroupID":{
            "value":"[reference('security_groups_setup').outputs.masterSecurityGroupID.value]"
          },
          "workerSecurityGroupID":{
            "value":"[reference('security_groups_setup').outputs.workerSecurityGroupID.value]"
          },
          "routeTableID":{
            "value":"[reference('route_table_setup').outputs.id.value]"
          }
        }
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"api_load_balancer_setup",
      "type":"Microsoft.Resources/deployments",
      "properties":{
        "mode":"incremental",
        "templateLink":{
          "uri":"[variables('publicLoadBalancerTemplateURI')]",
          "contentVersion":"1.0.0.0"
        },
        "parameters":{
          "clusterID":{
            "value":"[parameters('clusterID')]"
          },
          "GiantSwarmTags":{
            "value":"[parameters('GiantSwarmTags')]"
          },
          "prefix":{
            "value":"API"
          },
          "ports":{
            "value":[
              {
                "protocol":"Tcp",
                "frontend":443,
                "backend":443,
                "probeProtocol": "Tcp",
                "probePort": 443
              },
              {
                "protocol":"Udp",
                "frontend":60001,
                "backend":60001,
                "probeProtocol": "Tcp",
                "probePort": 443
              }
            ]
          }
        }
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"etcd_load_balancer_setup",
      "type":"Microsoft.Resources/deployments",
      "properties":{
        "mode":"incremental",
        "templateLink":{
          "uri":"[variables('privateLoadBalancerTemplateURI')]",
          "contentVersion":"1.0.0.0"
        },
        "parameters":{
          "clusterID":{
            "value":"[parameters('clusterID')]"
          },
          "GiantSwarmTags":{
            "value":"[parameters('GiantSwarmTags')]"
          },
          "prefix":{
            "value":"ETCD"
          },
          "ports":{
            "value":[
              {
                "frontend":2379,
                "backend":2379
              }
            ]
          },
          "masterSubnetID":{
            "value":"[reference('virtual_network_setup').outputs.masterSubnetID.value]"
          }
        }
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"kubernetes_load_balancer_setup",
      "type":"Microsoft.Resources/deployments",
      "properties":{
        "mode":"incremental",
        "templateLink":{
          "uri":"[variables('kubernetesLoadBalancerTemplateURI')]",
          "contentVersion":"1.0.0.0"
        },
        "parameters":{
          "initialProvisioning":{
            "value":"[parameters('initialProvisioning')]"
          }
        }
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"kubernetes_api_dns_setup",
      "type":"Microsoft.Resources/deployments",
      "properties":{
        "mode":"incremental",
        "templateLink":{
          "uri":"[variables('dnsASetupTemplateURI')]",
          "contentVersion":"1.0.0.0"
        },
        "parameters":{
          "dnsZone":{
            "value":"[concat(parameters('clusterID'), '.k8s.', parameters('dnsZones').api.name)]"
          },
          "GiantSwarmTags":{
            "value":"[parameters('GiantSwarmTags')]"
          },
          "prefix":{
            "value":"api"
          },
          "ipAddress":{
            "value":"[reference('api_load_balancer_setup').outputs.ipAddress.value]"
          }
        }
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"kubernetes_etcd_dns_setup",
      "type":"Microsoft.Resources/deployments",
      "properties":{
        "mode":"incremental",
        "templateLink":{
          "uri":"[variables('dnsASetupTemplateURI')]",
          "contentVersion":"1.0.0.0"
        },
        "parameters":{
          "dnsZone":{
            "value":"[concat(parameters('clusterID'), '.k8s.', parameters('dnsZones').api.name)]"
          },
          "GiantSwarmTags":{
            "value":"[parameters('GiantSwarmTags')]"
          },
          "prefix":{
            "value":"etcd"
          },
          "ipAddress":{
            "value":"[reference('etcd_load_balancer_setup').outputs.ipAddress.value]"
          }
        }
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"container_setup",
      "type":"Microsoft.Resources/deployments",
      "properties":{
        "mode":"incremental",
        "templateLink":{
          "uri":"[variables('containerSetupTemplateURI')]",
          "contentVersion":"1.0.0.0"
        },
        "parameters":{
          "blobContainerName":{
            "value":"[parameters('blobContainerName')]"
          },
          "clusterID":{
            "value":"[parameters('clusterID')]"
          },
          "GiantSwarmTags":{
            "value":"[parameters('GiantSwarmTags')]"
          },
          "storageAccountName":{
            "value":"[parameters('storageAccountName')]"
          }
        }
      }
    },
    {
      "apiVersion":"2016-09-01",
      "name":"kubernetes_ingress_wildcard_dns_setup",
      "type":"Microsoft.Resources/deployments",
      "properties":{
        "mode":"incremental",
        "templateLink":{
          "uri":"[variables('dnsCNAMESetupTemplateURI')]",
          "contentVersion":"1.0.0.0"
        },
        "parameters":{
          "dnsZone":{
            "value":"[concat(parameters('clusterID'), '.k8s.', parameters('dnsZones').ingress.name)]"
          },
          "GiantSwarmTags":{
            "value":"[parameters('GiantSwarmTags')]"
          },
          "prefix":{
            "value":"*"
          },
          "cname":{
            "value":"[concat('ingress.', parameters('clusterID'), '.k8s.', parameters('dnsZones').ingress.name)]"
          }
        }
      }
    }
  ]
}
