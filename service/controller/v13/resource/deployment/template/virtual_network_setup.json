{
  "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion":"1.0.0.0",
  "parameters":{
    "bastionE2ESecurityGroupID":{
      "type":"string",
      "metadata":{
        "description":"Security group that allows traffic on port 22 from everywhere."
      }
    },
    "bastionE2ESubnetCidr":{
      "type":"string",
      "metadata":{
        "description":"CIDR used for the subnet where the e2e bastion will be deployed."
      }
    },
    "GiantSwarmTags":{
      "type":"object",
      "defaultValue":{
        "provider":"F80D01C0-7AAC-4440-98F6-5061511962AD"
      }
    },
    "virtualNetworksAPIVersion":{
      "type":"string",
      "defaultValue":"2016-12-01",
      "metadata":{
        "description":"API version used by the Microsoft.Network/virtualNetworks resource."
      }
    },
    "virtualNetworkName":{
      "type":"string"
    },
    "virtualNetworkCidr":{
      "type":"string"
    },
    "masterSubnetCidr":{
      "type":"string"
    },
    "workerSubnetCidr":{
      "type":"string"
    },
    "vnetGatewaySubnetName":{
      "type":"string"
    },
    "vpnSubnetCidr":{
      "type":"string"
    },
    "masterSecurityGroupID":{
      "type":"string"
    },
    "workerSecurityGroupID":{
      "type":"string"
    },
    "routeTableID":{
      "type":"string"
    }
  },
  "variables":{
    "virtualNetworkID":"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "bastionE2ESubnetName":"[concat(parameters('virtualNetworkName'), '-BastionE2ESubnet')]",
    "masterSubnetName":"[concat(parameters('virtualNetworkName'), '-MasterSubnet')]",
    "masterSubnetID":"[concat(variables('virtualNetworkID'), '/subnets/', variables('masterSubnetName'))]",
    "workerSubnetName":"[concat(parameters('virtualNetworkName'), '-WorkerSubnet')]",
    "workerSubnetID":"[concat(variables('virtualNetworkID'), '/subnets/', variables('workerSubnetName'))]",
    "bastionE2ESubnetDefinition": [{
      "name":"[variables('bastionE2ESubnetName')]",
      "properties":{
        "addressPrefix":"[parameters('bastionE2ESubnetCidr')]",
        "networkSecurityGroup":{
          "id":"[parameters('bastionE2ESecurityGroupID')]"
        },
        "routeTable":{
          "id":"[parameters('routeTableID')]"
        }
      }
    }],
    "subnets": [
      {
        "name":"[variables('masterSubnetName')]",
        "properties":{
          "addressPrefix":"[parameters('masterSubnetCidr')]",
          "networkSecurityGroup":{
            "id":"[parameters('masterSecurityGroupID')]"
          },
          "routeTable":{
            "id":"[parameters('routeTableID')]"
          }
        }
      },
      {
        "name":"[variables('workerSubnetName')]",
        "properties":{
          "addressPrefix":"[parameters('workerSubnetCidr')]",
          "networkSecurityGroup":{
            "id":"[parameters('workerSecurityGroupID')]"
          },
          "routeTable":{
            "id":"[parameters('routeTableID')]"
          },
          "serviceEndpoints": [
            { "service": "Microsoft.Storage" },
            { "service": "Microsoft.Sql" },
            { "service": "Microsoft.AzureCosmosDB" },
            { "service": "Microsoft.KeyVault" },
            { "service": "Microsoft.ServiceBus" },
            { "service": "Microsoft.EventHub" },
            { "service": "Microsoft.AzureActiveDirectory" },
            { "service": "Microsoft.ContainerRegistry" },
            { "service": "Microsoft.Web" }
          ]
        }
      },
      {
        "name":"[parameters('vnetGatewaySubnetName')]",
        "properties":{
          "addressPrefix":"[parameters('vpnSubnetCidr')]"
        }
      }
    ]
  },
  "resources":[
    {
      "type":"Microsoft.Network/virtualNetworks",
      "name":"[parameters('virtualNetworkName')]",
      "apiVersion":"[parameters('virtualNetworksAPIVersion')]",
      "location":"[resourceGroup().location]",
      "tags":{
        "provider":"[toUpper(parameters('GiantSwarmTags').provider)]"
      },
      "properties":{
        "addressSpace":{
          "addressPrefixes":[
            "[parameters('virtualNetworkCidr')]"
          ]
        },
        "subnets":"[concat( parameters('subnets'), if( contains(parameters('virtualNetworkName'), 'ci-'), variables('bastionE2ESubnetDefinition'), []) )]"
      }
    }
  ],
  "outputs":{
    "masterSubnetID":{
      "type":"string",
      "value":"[variables('masterSubnetID')]"
    },
    "workerSubnetID":{
      "type":"string",
      "value":"[variables('workerSubnetID')]"
    }
  }
}
