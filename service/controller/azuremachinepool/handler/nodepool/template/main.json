{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "azureOperatorVersion": {
      "type": "string",
      "metadata": {
        "description": "Version of the azure operator that created the deployment."
      }
    },
    "clusterID": {
      "type": "string",
      "metadata": {
        "description": "Unique ID of the cluster owning the nodepool."
      }
    },
    "dataDisks": {
      "type": "array",
      "metadata": {
        "description": "Disks attached to the VMSS."
      }
    },
    "enableAcceleratedNetworking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When turned on, the scale set will have accelerated networking enabled."
      }
    },
    "GiantSwarmTags": {
      "type": "object",
      "defaultValue": {
        "provider": "F80D01C0-7AAC-4440-98F6-5061511962AD"
      }
    },
    "kubernetesVersion": {
      "type": "string",
      "metadata": {
        "description": "Kubernetes version that is configured in the deployment."
      }
    },
    "nodepoolName": {
      "type": "string",
      "metadata": {
        "description": "Unique Name of the node pool."
      }
    },
    "currentReplicas": {
      "type": "int",
      "metadata": {
        "description": "Current number of VMs in the VMSS."
      }
    },
    "minReplicas": {
      "type": "int",
      "metadata": {
        "description": "Minimum number of VMs in the VMSS."
      }
    },
    "maxReplicas": {
      "type": "int",
      "metadata": {
        "description": "Maximum number of VMs in the VMSS."
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "Storage Account Type to use for managed disks. Either 'Standard_LRS' or 'Premium_LRS'"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Output value of the worker vnet name as referenced from the virtual network setup."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Output value of the worker subnet name as referenced from the virtual network setup."
      }
    },
    "osImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "Publisher is the name of the organization that created the image."
      }
    },
    "osImageOffer": {
      "type": "string",
      "metadata": {
        "description": "Offer specifies the name of a group of related images created by the publisher."
      }
    },
    "osImageSKU": {
      "type": "string",
      "metadata": {
        "description": "SKU specifies an instance of an offer, such as a major release of a distribution."
      }
    },
    "osImageVersion": {
      "type": "string",
      "metadata": {
        "description": "Version specifies the version of an image sku."
      }
    },
    "overprovision": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "When turned on, the scale set actually spins up more VMs than you asked for, then deletes the extra VMs once the requested number of VMs are successfully provisioned."
      }
    },
    "upgradePolicy": {
      "type": "string",
      "defaultValue": "Manual",
      "metadata": {
        "description": "Determine how VMs are brought up-to-date with the latest scale set model. Valid values are Manual, Automatic, Rolling."
      }
    },
    "vmCustomData": {
      "type": "securestring",
      "metadata": {
        "description": "Base64-encoded cloud-config data."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the VMs in the VMSS."
      }
    },
    "vmssSinglePlacementGroup": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "When false, the scale set can be composed of multiple placement groups and has a range of 0-1,000 VMs. When set to the default value of true, a scale set is composed of a single placement group, and has a range of 0-100 VMs."
      }
    },
    "zones": {
      "type": "array",
      "defaultValue": [
        1
      ],
      "metadata": {
        "description": "Availability zones used to create the cluster."
      }
    }
  },
  "variables": {
    "contributorRoleDefinitionGUID": "b24988ac-6180-42a0-ab88-20f7382dd24c",
    "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('contributorRoleDefinitionGUID'))]",
    "roleAssignmentName": "[guid(concat(resourceGroup().id, '-', variables('vmssName'), '-', 'roleassignment'))]",
    "sshUser": "giantswarm",
    "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]",
    "vmssName": "[parameters('nodepoolName')]",
    "vmssExtensions": [
      {
        "name": "MSILinuxExtension",
        "properties": {
          "publisher": "Microsoft.ManagedIdentity",
          "type": "ManagedIdentityExtensionForLinux",
          "typeHandlerVersion": "1.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "port": 50342
          },
          "protectedSettings": {}
        }
      }
    ]
  },
  "resources": [
    {
      "apiVersion": "2019-07-01",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('vmssName')]",
      "location": "[resourceGroup().location]",
      "zones": "[if(greater(length(parameters('zones')),0), parameters('zones'), json('null'))]",
      "tags": {
        "provider": "[toUpper(parameters('GiantSwarmTags').provider)]",
        "cluster-autoscaler-enabled": "[if(equals(parameters('minReplicas'),parameters('maxReplicas')), 'false', 'true')]",
        "cluster-autoscaler-name": "[parameters('clusterID')]",
        "gs-azure-operator.giantswarm.io-version": "[parameters('azureOperatorVersion')]",
        "kubernetes-version": "[parameters('kubernetesVersion')]",
        "min": "[int(parameters('minReplicas'))]",
        "max": "[int(parameters('maxReplicas'))]"
      },
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('currentReplicas')]"
      },
      "identity": {
        "type": "systemAssigned"
      },
      "plan": {
        "name": "[parameters('osImageSKU')]",
        "publisher": "[parameters('osImagePublisher')]",
        "product": "[parameters('osImageOffer')]"
      },
      "properties": {
        "overprovision": "[parameters('overprovision')]",
        "upgradePolicy": {
          "mode": "[parameters('upgradePolicy')]"
        },
        "singlePlacementGroup": "[parameters('vmssSinglePlacementGroup')]",
        "virtualMachineProfile": {
          "osProfile": {
            "adminUsername": "[variables('sshUser')]",
            "computerNamePrefix": "[concat(variables('vmssName'), '-')]",
            "customData": "[parameters('vmCustomData')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
                "publicKeys": [
                  {
                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCuJvxy3FKGrfJ4XB5exEdKXiqqteXEPFzPtex6dC0lHyigtO7l+NXXbs9Lga2+Ifs0Tza92MRhg/FJ+6za3oULFo7+gDyt86DIkZkMFdnSv9+YxYe+g4zqakSV+bLVf2KP6krUGJb7t4Nb+gGH62AiUx+58Onxn5rvYC0/AXOYhkAiH8PydXTDJDPhSA/qWSWEeCQistpZEDFnaVi0e7uq/k3hWJ+v9Gz0qqChHKWWOYp3W6aiIE3G6gLOXNEBdWRrjK6xmrSmo9Toqh1G7iIV0Y6o9w5gIHJxf6+8X70DCuVDx9OLHmjjMyGnd+1c3yTFMUdugtvmeiGWE0E7ZjNSNIqWlnvYJ0E1XPBiyQ7nhitOtVvPC4kpRP7nOFiCK9n8Lr3z3p4v3GO0FU3/qvLX+ECOrYK316gtwSJMd+HIouCbaJaFGvT34peaq1uluOP/JE+rFOnszZFpCYgTY2b4lWjf2krkI/a/3NDJPnRpjoE3RjmbepkZeIdOKTCTH1xYZ3O8dWKRX8X4xORvKJO+oV2UdoZlFa/WJTmq23z4pCVm0UWDYR5C2b9fHwxh/xrPT7CQ0E+E9wmeOvR4wppDMseGQCL+rSzy2AYiQ3D8iQxk0r6T+9MyiRCfuY73p63gB3m37jMQSLHvm77MkRnYcBy61Qxk+y+ls2D0xJfqxw== fake",
                    "path": "[concat('/home/', variables('sshUser'), '/.ssh/authorized_keys')]"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('osImagePublisher')]",
              "offer": "[parameters('osImageOffer')]",
              "sku": "[parameters('osImageSKU')]",
              "version": "[parameters('osImageVersion')]"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[parameters('storageAccountType')]"
              }
            },
            "copy": [
              {
                "name": "dataDisks",
                "count": "[length(parameters('dataDisks'))]",
                "input": {
                  "caching": "ReadWrite",
                  "createOption": "Empty",
                  "diskSizeGB": "[parameters('dataDisks')[copyIndex('dataDisks')].diskSizeGB]",
                  "managedDisk": {
                    "storageAccountType": "[parameters('storageAccountType')]"
                  },
                  "lun": "[parameters('dataDisks')[copyIndex('dataDisks')].lun]"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(variables('vmssName'), '-nic')]",
                "properties": {
                  "enableIPForwarding": true,
                  "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "[concat(variables('vmssName'), '-ipconfig')]",
                      "properties": {
                        "subnet": {
                          "id": "[variables('subnetResourceId')]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": "[variables('vmssExtensions')]"
          },
          "scheduledEventsProfile": {
            "terminateNotificationProfile": {
              "notBeforeTimeout": "PT15M",
              "enable": true
            }
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-01",
      "type": "Microsoft.Authorization/roleAssignments",
      "name": "[variables('roleAssignmentName')]",
      "tags": {
        "provider": "[toUpper(parameters('GiantSwarmTags').provider)]"
      },
      "properties": {
        "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachineScaleSets', variables('vmssName')),'2019-12-01', 'Full').identity.principalId]",
        "scope": "[resourceGroup().id]",
        "principalType": "ServicePrincipal"
      }
    }
  ]
}
