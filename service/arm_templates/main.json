{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterID": {
      "type": "string",
      "metadata": {
        "description": "Unique ID of this guest cluster."
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ]
    },
    "virtualNetworkCidr": {
      "type": "string",
      "metadata": {
        "description": "The main CIDR block reserved for this virtual network."
      }
    },
    "masterSubnetCidr": {
      "type": "string"
    },
    "workerSubnetCidr": {
      "type": "string"
    },
    "hostClusterCidr": {
      "type": "string"
    },
    "kubernetesAPISecurePort": {
      "type": "int"
    },
    "kubernetesIngressSecurePort": {
      "type": "int"
    },
    "kubernetesIngressInsecurePort": {
      "type": "int"
    },
    "mastersCustomConfig": {
      "type": "array"
    },
    "workersCustomConfig": {
      "type": "array"
    },
    "masterDisablePasswordAuth": {
      "type": "bool",
      "defaultValue": true
    },
    "workerDisablePasswordAuth": {
      "type": "bool",
      "defaultValue": true
    },
    "masterCloudConfigData": {
      "type": "string",
      "metadata": {
        "description": "Base64-encoded cloud-config data."
      }
    },
    "workerCloudConfigData": {
      "type": "string",
      "metadata": {
        "description": "Base64-encoded cloud-config data."
      }
    },
    "keyVaultName": {
      "type": "string"
    },
    "keyVaultSecretsObject": {
      "type": "secureObject"
    },
    "templatesBaseURI" : {
      "type": "string",
      "metadata": {
        "description": "The base URI from which the templates will be fetched. Ends with a trailing '/'."
      }
    },
    "availabilitySetsTemplateFile": {
      "type": "string",
      "defaultValue": "availability_sets_setup.json"
    },
    "certificatesTemplateFile": {
      "type": "string",
      "defaultValue": "certificates.json"
    },
    "clusterSetupTemplateFile": {
      "type": "string",
      "defaultValue": "cluster_setup.json"
    },
    "dnsASetupTemplateFile": {
      "type": "string",
      "defaultValue": "dns_a_setup.json"
    },
    "dnsCNAMESetupTemplateFile": {
      "type": "string",
      "defaultValue": "dns_cname_setup.json"
    },
    "nodeSetupTemplateFile": {
      "type": "string",
      "defaultValue": "node_setup.json"
    },
    "publicLoadBalancerTemplateFile": {
      "type": "string",
      "defaultValue": "public_load_balancer_setup.json"
    },
    "routeTableTemplateFile": {
      "type": "string",
      "defaultValue": "route_table_setup.json"
    },
    "securityGroupsSetupTemplateFile": {
      "type": "string",
      "defaultValue": "security_groups_setup.json"
    },
    "virtualNetworkSetupTemplateFile": {
      "type": "string",
      "defaultValue": "virtual_network_setup.json"
    },
    "dnsZones": {
      "type": "object",
      "metadata": {
        "description": "The DNS zones for kubernetes api, etcd and ingress."
      }
    }
  },
  "variables": {
    "availabilitySetsTemplateURI": "[concat(parameters('templatesBaseURI'), parameters('availabilitySetsTemplateFile'))]",
    "certificatesTemplateURI": "[concat(parameters('templatesBaseURI'), parameters('certificatesTemplateFile'))]",
    "clusterSetupTemplateURI": "[concat(parameters('templatesBaseURI'), parameters('clusterSetupTemplateFile'))]",
    "dnsASetupTemplateURI": "[concat(parameters('templatesBaseURI'), parameters('dnsASetupTemplateFile'))]",
    "dnsCNAMESetupTemplateURI": "[concat(parameters('templatesBaseURI'), parameters('dnsCNAMESetupTemplateFile'))]",
    "nodeSetupTemplateURI": "[concat(parameters('templatesBaseURI'), parameters('nodeSetupTemplateFile'))]",
    "publicLoadBalancerTemplateURI": "[concat(parameters('templatesBaseURI'), parameters('publicLoadBalancerTemplateFile'))]",
    "routeTableTemplateURI": "[concat(parameters('templatesBaseURI'), parameters('routeTableTemplateFile'))]",
    "securityGroupsSetupTemplateURI": "[concat(parameters('templatesBaseURI'), parameters('securityGroupsSetupTemplateFile'))]",
    "virtualNetworkSetupTemplateURI": "[concat(parameters('templatesBaseURI'), parameters('virtualNetworkSetupTemplateFile'))]",
    "masterPrefix": "Master",
    "workerPrefix": "Worker"
  },
  "resources": [
    {
      "apiVersion": "2016-09-01",
      "name": "cluster_setup",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('clusterSetupTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterID": {"value": "[parameters('clusterID')]"},
          "storageAccountType": {"value": "[parameters('storageAccountType')]"}
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "security_groups_setup",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('securityGroupsSetupTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterID": {"value": "[parameters('clusterID')]"},
          "masterSubnetCidr": {"value": "[parameters('masterSubnetCidr')]"},
          "workerSubnetCidr": {"value": "[parameters('workerSubnetCidr')]"},
          "hostClusterCidr": {"value": "[parameters('hostClusterCidr')]"},
          "kubernetesAPISecurePort": {"value": "[parameters('kubernetesAPISecurePort')]"},
          "kubernetesIngressSecurePort": {"value": "[parameters('kubernetesIngressSecurePort')]"},
          "kubernetesIngressInsecurePort": {"value": "[parameters('kubernetesIngressInsecurePort')]"}
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "route_table_setup",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('routeTableTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterID": {"value": "[parameters('clusterID')]"}
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "virtual_network_setup",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
          "route_table_setup"
      ],
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('virtualNetworkSetupTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterID": {"value": "[parameters('clusterID')]"},
          "virtualNetworkCidr": {"value": "[parameters('virtualNetworkCidr')]"},
          "masterSubnetCidr": {"value": "[parameters('masterSubnetCidr')]"},
          "workerSubnetCidr": {"value": "[parameters('workerSubnetCidr')]"},
          "masterSecurityGroupID": {"value": "[reference('security_groups_setup').outputs.masterSecurityGroupID.value]"},
          "workerSecurityGroupID": {"value": "[reference('security_groups_setup').outputs.workerSecurityGroupID.value]"},
          "routeTableID": {"value": "[reference('route_table_setup').outputs.id.value]"}
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "certificates",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "master_nodes_setup_copy",
        "worker_nodes_setup_copy"
      ],
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('certificatesTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterID": {"value": "[parameters('clusterID')]"},
          "keyVaultName": {"value": "[parameters('keyVaultName')]"},
          "keyVaultSecretsObject": {"value": "[parameters('keyVaultSecretsObject')]"},
          "masterNodeIDs": {
            "copy": [{
              "name": "value",
              "count": "[length(parameters('mastersCustomConfig'))]",
              "input": {
                "id": "[reference(concat('master_nodes_setup_', string(add(copyIndex('value'), 1)))).outputs.nodePrincipalID.value]"
              }
            }]
          },
          "workerNodeIDs": {
            "copy": [{
              "name": "value",
              "count": "[length(parameters('workersCustomConfig'))]",
              "input": {
                "id": "[reference(concat('worker_nodes_setup_', string(add(copyIndex('value'), 1)))).outputs.nodePrincipalID.value]"
              }
            }]
          }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "master_availability_sets_setup",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('availabilitySetsTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterID": {"value": "[parameters('clusterID')]"},
          "prefix": {"value": "[variables('masterPrefix')]"}
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "worker_availability_sets_setup",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('availabilitySetsTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterID": {"value": "[parameters('clusterID')]"},
          "prefix": {"value": "[variables('workerPrefix')]"}
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "api_load_balancer_setup",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('publicLoadBalancerTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterID": {"value": "[parameters('clusterID')]"},
          "prefix": {"value": "API"},
          "ports": {"value":
            [
              {
                "frontend": 443,
                "backend": 443
              }
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "ingress_load_balancer_setup",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('publicLoadBalancerTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterID": {"value": "[parameters('clusterID')]"},
          "prefix": {"value": "Ingress"},
          "ports": {"value":
            [
              {
                "frontend": 443,
                "backend": 443
              },
              {
                "frontend": 80,
                "backend": 80
              }
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "etcd_dns_setup",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('dnsASetupTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsZone": { "value": "[concat(parameters('clusterID'), '.k8s.', parameters('dnsZones').etcd)]" },
          "prefix": { "value": "etcd" },
          "ipAddress": { "value": "[reference('master_nodes_setup_1').outputs.ipAddress.value]" }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "kubernetes_api_dns_setup",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('dnsASetupTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsZone": { "value": "[concat(parameters('clusterID'), '.k8s.', parameters('dnsZones').api)]" },
          "prefix": { "value": "api" },
          "ipAddress": { "value": "[reference('api_load_balancer_setup').outputs.ipAddress.value]" }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "kubernetes_ingress_dns_setup",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('dnsASetupTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsZone": { "value": "[concat(parameters('clusterID'), '.k8s.', parameters('dnsZones').ingress)]" },
          "prefix": { "value": "ingress" },
          "ipAddress": { "value": "[reference('ingress_load_balancer_setup').outputs.ipAddress.value]" }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "kubernetes_ingress_wildcard_dns_setup",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('dnsCNAMESetupTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsZone": { "value": "[concat(parameters('clusterID'), '.k8s.', parameters('dnsZones').ingress)]" },
          "prefix": { "value": "*" },
          "cname": { "value": "[concat('ingress.', parameters('clusterID'), '.k8s.', parameters('dnsZones').ingress)]" }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "[concat('master_nodes_setup_', copyIndex(1))]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "master_nodes_setup_copy",
        "count":  "[length(parameters('mastersCustomConfig'))]"
      },
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('nodeSetupTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterID": {"value": "[parameters('clusterID')]"},
          "storageAccountName": {"value": "[reference('cluster_setup').outputs.storageAccountName.value]"},
          "prefix": {"value": "[concat(variables('masterPrefix'), '-', copyIndex(1))]"},
          "subnetID": {"value": "[reference('virtual_network_setup').outputs.masterSubnetID.value]"},
          "availabilitySetID": {"value": "[reference('master_availability_sets_setup').outputs.availabilitySetID.value]"},
          "disablePasswordAuth": {"value": "[parameters('masterDisablePasswordAuth')]"},
          "vmSize": {"value": "[parameters('mastersCustomConfig')[copyIndex()].vmSize]"},
          "adminUsername": {"value": "[parameters('mastersCustomConfig')[copyIndex()].adminUsername]"},
          "adminSSHKeyData": {"value": "[parameters('mastersCustomConfig')[copyIndex()].adminSSHKeyData]"},
          "dataDiskSizeGB": {"value": "[parameters('mastersCustomConfig')[copyIndex()].dataDiskSizeGB]"},
          "osImagePublisher": {"value": "[parameters('mastersCustomConfig')[copyIndex()].osImage.publisher]"},
          "osImageOffer": {"value": "[parameters('mastersCustomConfig')[copyIndex()].osImage.offer]"},
          "osImageSKU": {"value": "[parameters('mastersCustomConfig')[copyIndex()].osImage.sku]"},
          "osImageVersion": {"value": "[parameters('mastersCustomConfig')[copyIndex()].osImage.version]"},
          "cloudConfigData": {"value": "[parameters('masterCloudConfigData')]"},
          "loadBalancerBackendPoolIDs": {"value": "[createArray(reference('api_load_balancer_setup').outputs.loadBalancerBackendPoolID.value)]"}
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "[concat('worker_nodes_setup_', copyIndex(1))]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "worker_nodes_setup_copy",
        "count":  "[length(parameters('workersCustomConfig'))]"
      },
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('nodeSetupTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterID": {"value": "[parameters('clusterID')]"},
          "storageAccountName": {"value": "[reference('cluster_setup').outputs.storageAccountName.value]"},
          "prefix": {"value": "[concat(variables('workerPrefix'), '-', copyIndex(1))]"},
          "subnetID": {"value": "[reference('virtual_network_setup').outputs.workerSubnetID.value]"},
          "availabilitySetID": {"value": "[reference('worker_availability_sets_setup').outputs.availabilitySetID.value]"},
          "disablePasswordAuth": {"value": "[parameters('workerDisablePasswordAuth')]"},
          "vmSize": {"value": "[parameters('workersCustomConfig')[copyIndex()].vmSize]"},
          "adminUsername": {"value": "[parameters('workersCustomConfig')[copyIndex()].adminUsername]"},
          "adminSSHKeyData": {"value": "[parameters('workersCustomConfig')[copyIndex()].adminSSHKeyData]"},
          "dataDiskSizeGB": {"value": "[parameters('workersCustomConfig')[copyIndex()].dataDiskSizeGB]"},
          "osImagePublisher": {"value": "[parameters('workersCustomConfig')[copyIndex()].osImage.publisher]"},
          "osImageOffer": {"value": "[parameters('workersCustomConfig')[copyIndex()].osImage.offer]"},
          "osImageSKU": {"value": "[parameters('workersCustomConfig')[copyIndex()].osImage.sku]"},
          "osImageVersion": {"value": "[parameters('workersCustomConfig')[copyIndex()].osImage.version]"},
          "cloudConfigData": {"value": "[parameters('workerCloudConfigData')]"},
          "loadBalancerBackendPoolIDs": {"value": "[createArray(reference('ingress_load_balancer_setup').outputs.loadBalancerBackendPoolID.value)]"}
        }
      }
    }
  ]
}
