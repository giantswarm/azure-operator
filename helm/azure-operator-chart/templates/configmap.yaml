apiVersion: v1
kind: ConfigMap
metadata:
  name: azure-operator-configmap
  namespace: giantswarm
data:
  config.yaml: |
    server:
      listen:
        address: 'http://0.0.0.0:8000'
    service:
      azure:
        cloud: '{{ .Values.Installation.V1.Provider.Azure.Cloud }}'
        hostCluster:
          cidr: '{{ .Values.Installation.V1.Provider.Azure.HostCluster.CIDR }}'
          resourceGroup: '{{ .Values.Installation.V1.Provider.Azure.HostCluster.ResourceGroup }}'
          virtualNetwork: '{{ .Values.Installation.V1.Provider.Azure.HostCluster.VirtualNetwork }}'
          virtualNetworkGateway: '{{ .Values.Installation.V1.Provider.Azure.HostCluster.VirtualNetworkGateway }}'
        location: '{{ .Values.Installation.V1.Provider.Azure.Location }}'
        msi:
          enabled: '{{ .Values.Installation.V1.Provider.Azure.MSI.Enabled }}'
      guest:
        ssh:
          ssoPublicKey: '{{ .Values.Installation.V1.Guest.SSH.SSOPublicKey }}'
      installation:
        name: '{{ .Values.Installation.V1.Name }}'
      {{- if .Values.Installation.V1.Guest }}
        guest:
          kubernetes:
            api:
              auth:
                provider:
                  oidc:
                    clientID: '{{ .Values.Installation.V1.Guest.Kubernetes.API.Auth.Provider.OIDC.ClientID }}'
                    issuerURL: '{{ .Values.Installation.V1.Guest.Kubernetes.API.Auth.Provider.OIDC.IssuerURL }}'
                    usernameClaim: '{{ .Values.Installation.V1.Guest.Kubernetes.API.Auth.Provider.OIDC.UsernameClaim }}'
                    groupsClaim: '{{ .Values.Installation.V1.Guest.Kubernetes.API.Auth.Provider.OIDC.GroupsClaim }}'
        {{- end }}
      kubernetes:
        incluster: true
