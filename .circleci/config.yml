e2eTest: &e2eTest
  machine: true
  working_directory: /home/circleci/.go_workspace/src/github.com/giantswarm/azure-operator
  steps:
  - checkout
  - run: |
      wget -q $(curl -sS https://api.github.com/repos/giantswarm/e2e-harness/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
      chmod +x ./e2e-harness
  - run: |
      K8S_VERSION=1.10.0
      curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v${K8S_VERSION}/bin/linux/amd64/kubectl
      chmod +x kubectl
      sudo mv kubectl /usr/bin/
  - run: |
      HELM_VERSION=2.16.2
      curl -L https://kubernetes-helm.storage.googleapis.com/helm-v${HELM_VERSION}-linux-amd64.tar.gz > ./helm.tar.gz
      tar xzvf helm.tar.gz
      chmod u+x linux-amd64/helm
      sudo mv linux-amd64/helm /usr/bin/
  - run: |
      SONOBUOY_VERSION=0.17.2 OS=linux && \
      curl -L "https://github.com/vmware-tanzu/sonobuoy/releases/download/v${SONOBUOY_VERSION}/sonobuoy_${SONOBUOY_VERSION}_${OS}_amd64.tar.gz" --output $HOME/bin/sonobuoy.tar.gz && \
      tar -xzf $HOME/bin/sonobuoy.tar.gz -C $HOME/bin && \
      chmod +x $HOME/bin/sonobuoy && \
      sudo mv $HOME/bin/sonobuoy /usr/bin/
      rm $HOME/bin/sonobuoy.tar.gz
  - run: ./e2e-harness localkube
  - run: ./e2e-harness setup --remote=false
  - run:
      command: ./e2e-harness test --test-dir=${TEST_DIR}
      no_output_timeout: 30m

  - store_artifacts:
      path: .e2e-harness/workdir/logs
      destination: logs

  - run:
      command: ./e2e-harness teardown
      when: always



version: 2
jobs:
  build:
    machine: true
    steps:
    - checkout
    - run:
        name: Install architect
        command: |
          wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
          chmod +x ./architect
          ./architect version
    - run:
        name: Build using architect
        command: ./architect build
    - store_test_results:
        path: /tmp/results
    - deploy:
        name: Deploy using architect
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            ./architect deploy
          fi
  master:
    docker:
      - image: busybox
    steps:
      - run: "true"
  pr:
    docker:
      - image: busybox
    steps:
      - run: "true"



  e2eTestWIPPRClusterState:
    environment:
      IGNITION_DEBUG_ENABLED: "false"
      IGNITION_DEBUG_LOGS_PREFIX: "wip-pr-clusterstate"
      TESTED_VERSION: "wip"
      TEST_DIR: "integration/test/clusterstate"
    <<: *e2eTest

  e2eTestWIPPRScaling:
    environment:
      TESTED_VERSION: "wip"
      TEST_DIR: "integration/test/scaling"
    <<: *e2eTest

  e2eTestWIPPRMultiAZ:
    environment:
      TESTED_VERSION: "wip"
      TEST_DIR: "integration/test/multiaz"
    <<: *e2eTest

  e2eTestWIPPRClusterDeletion:
    environment:
      TESTED_VERSION: "wip"
      TEST_DIR: "integration/test/clusterdeletion"
    <<: *e2eTest

  e2eTestWIPPRSonobuoy:
    environment:
      TESTED_VERSION: "wip"
      TEST_DIR: "integration/test/sonobuoy"
    <<: *e2eTest

  # Note we only have update tests for the current version because it anyway
  # tests one version transition. Having the same tests for WIP only runs the
  # same test twice and we can simply save resources by not doing so.
  e2eTestCurPRUpdate:
    environment:
      TESTED_VERSION: "current"
      TEST_DIR: "integration/test/update"
    <<: *e2eTest



workflows:
  version: 2
  build_and_e2eTest:
    jobs:
      - build
      - hold:
          type: approval
      - sonobuoy:
          type: approval
          filters:
            branches:
              ignore: master
          requires:
            - build
      - master:
          requires:
            - build
          filters:
            branches:
              only: master
      - pr:
          requires:
            - build
            - hold
          filters:
            branches:
              ignore: master

      - e2eTestWIPPRClusterState:
          requires:
          - pr

      - e2eTestWIPPRScaling:
          requires:
          - pr

      - e2eTestWIPPRMultiAZ:
          requires:
          - pr

      - e2eTestWIPPRClusterDeletion:
          requires:
          - pr

      - e2eTestCurPRUpdate:
          requires:
          - pr

      - e2eTestWIPPRSonobuoy:
          requires:
          - sonobuoy
