
orbs:
  architect: giantswarm/architect@dev:helm-conftest

version: 2.1
jobs:
  build:
    machine: true
    steps:
      - checkout

      - run:
          name: Install architect
          command: |
            wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
            chmod +x ./architect
            ./architect version

      - run: |
          date +"%Y" > /tmp/year
          date +"%m" > /tmp/month
          date +"%d" > /tmp/day

      - restore_cache:
          keys:
            - go-cache-v1-{{ checksum "/tmp/year" }}-{{ checksum "/tmp/month" }}-{{ checksum "/tmp/day" }}
            - go-cache-v1-{{ checksum "/tmp/year" }}-{{ checksum "/tmp/month" }}
            - go-cache-v1-{{ checksum "/tmp/year" }}

      - run:
          name: Build using architect
          command: ./architect build

      - store_test_results:
          path: /tmp/results

      - save_cache:
          key: go-cache-v1-{{ checksum "/tmp/year" }}-{{ checksum "/tmp/month" }}-{{ checksum "/tmp/day" }}
          paths:
            - /tmp/go/cache

      - persist_to_workspace:
          root: .
          paths:
            - ./azure-operator

workflows:
  version: 2
  build_and_e2eTest:
    jobs:
      # execute linting and run tests
      - architect/go-test-legacy:
          name: test

      # build binary
      - build:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/

      # build and push docker image to quay
      - architect/push-to-docker:
          name: push-azure-operator-to-quay
          image: "quay.io/giantswarm/azure-operator"
          username_envar: "QUAY_USERNAME"
          password_envar: "QUAY_PASSWORD"
          requires:
            - build
          filters:
            # Trigger the job also on git tag.
            tags:
              only: /^v.*/

      # build and push helm chart to app catalog
      - architect/push-to-app-catalog:
          name: push-azure-operator-to-control-plane-app-catalog
          app_catalog: "control-plane-catalog"
          app_catalog_test: "control-plane-test-catalog"
          chart: "azure-operator"
          # Make sure docker image is successfully built.
          requires:
            - push-azure-operator-to-quay
          filters:
            # Trigger the job also on git tag.
            tags:
              only: /^v.*/

      # deploy to installations
      - architect/push-to-app-collection:
          name: push-azure-operator-to-azure-app-collection
          app_name: "azure-operator"
          app_collection_repo: "azure-app-collection"
          requires:
            - push-azure-operator-to-control-plane-app-catalog
          filters:
            # Do not trigger the job on commit.
            branches:
              ignore: /.*/
            # Trigger the job also on git tag.
            tags:
              only: /^v.*/

      # manual approval to run e2e tests
      - hold:
          type: approval
          requires:
            - push-azure-operator-to-control-plane-app-catalog
          filters:
            branches:
              ignore: master

      - architect/integration-test:
          name: cluster-state-test
          setup-script: "integration/config/setup.sh"
          env-file: "integration/test/clusterstate/.env"
          test-dir: "integration/test/clusterstate"
          test-timeout: "90m"
          requires:
          - hold

      - architect/integration-test:
          name: scaling-test
          setup-script: "integration/config/setup.sh"
          env-file: "integration/test/scaling/.env"
          test-dir: "integration/test/scaling"
          test-timeout: "90m"
          requires:
          - hold

      - architect/integration-test:
          name: multiaz-test
          setup-script: "integration/config/setup.sh"
          env-file: "integration/test/multiaz/.env"
          test-dir: "integration/test/multiaz"
          test-timeout: "40m"
          requires:
          - hold

      - architect/integration-test:
          name: cluster-deletion-test
          setup-script: "integration/config/setup.sh"
          env-file: "integration/test/clusterdeletion/.env"
          test-dir: "integration/test/clusterdeletion"
          test-timeout: "70m"
          requires:
          - hold
